<tokens>
<keyword>class</keyword>
<identifier>Random</identifier>
<symbol>{</symbol>
<keyword>static</keyword>
<keyword>int</keyword>
<identifier>seed</identifier>
<symbol>;</symbol>
<keyword>function</keyword>
<keyword>void</keyword>
<identifier>setSeed</identifier>
<symbol>(</symbol>
<keyword>int</keyword>
<identifier>newSeed</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>seed</identifier>
<symbol>=</symbol>
<identifier>newSeed</identifier>
<symbol>;</symbol>
<keyword>return</keyword>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>function</keyword>
<keyword>int</keyword>
<identifier>rand</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>seed</identifier>
<symbol>=</symbol>
<identifier>seed</identifier>
<symbol>+</symbol>
<integerConstant>20251</integerConstant>
<symbol>;</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>seed</identifier>
<symbol>&lt;</symbol>
<integerConstant>0</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>seed</identifier>
<symbol>=</symbol>
<identifier>seed</identifier>
<symbol>-</symbol>
<integerConstant>32767</integerConstant>
<symbol>-</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>return</keyword>
<identifier>seed</identifier>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>function</keyword>
<keyword>int</keyword>
<identifier>randRange</identifier>
<symbol>(</symbol>
<keyword>int</keyword>
<identifier>range</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>mask</identifier>
<symbol>;</symbol>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>ret</identifier>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>mask</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<keyword>while</keyword>
<symbol>(</symbol>
<identifier>mask</identifier>
<symbol>&lt;</symbol>
<identifier>range</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>mask</identifier>
<symbol>=</symbol>
<identifier>mask</identifier>
<symbol>*</symbol>
<integerConstant>2</integerConstant>
<symbol>+</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>let</keyword>
<identifier>ret</identifier>
<symbol>=</symbol>
<identifier>Random</identifier>
<symbol>.</symbol>
<identifier>rand</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>&amp;</symbol>
<identifier>mask</identifier>
<symbol>;</symbol>
<keyword>while</keyword>
<symbol>(</symbol>
<identifier>ret</identifier>
<symbol>&gt;</symbol>
<identifier>range</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<keyword>let</keyword>
<identifier>ret</identifier>
<symbol>=</symbol>
<identifier>Random</identifier>
<symbol>.</symbol>
<identifier>rand</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>&amp;</symbol>
<identifier>mask</identifier>
<symbol>;</symbol>
<symbol>}</symbol>
<keyword>return</keyword>
<identifier>ret</identifier>
<symbol>;</symbol>
<symbol>}</symbol>
<symbol>}</symbol>
</tokens>